Changes the properties x,y,z nad alpha from each triangle.
We have to enable DEPTH_TESTING in order to make z works.
We have to enable BLEND and BLENDING_MODE in order to make alpha works.

Usage:

           1-Triangle    2-Triangle

Move-Up:       W              I
Move-Down:     S              K
Move-Left:     A              J
Move-Right:    D              L
Z+:            E              O
Z-:            Q              U
Alpha+:        2              9
Alpha-:        1              8


This example show a common problem with alpha surfaces:

If depth testing is enabled, opengl doesn't care about alpha:

Suppose this:
-------------
Pixel A -> x=1, y=1, z=0, alpha=0.5
Pixel B -> x=1, y=1, z=1, alpha=1.0

Now, suppose that we first draw A and then Pixel B.
When drawing A, opengl sets A as the nearest pixel (it's the only one)
When we draw B, opengl sees that A is more near than B so doesn't draw B.
So, in this case while we would expect that pixel A will be mixed with pixel
B, this isn't happenning. This is because the depth test is filtering pixel B 
at all and it is not drew.

If we draw first B and the A, the blend will work as we expect. So
the key is ordering the pixels from back to front when we're using
depth testing.

On the web there are some algorithms to sort this situation:

1.
2.


